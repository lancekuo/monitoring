version: '3.5'
services:
    grafana:
        build: grafana/
        image: "lancekuo/grafana:5.2.4"
        healthcheck:
            test: curl -sf localhost:3000
            interval: 30s
            timeout: 30s
            retries: 3
        environment:
            - "GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}"
            - "GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-test}"
            - "GF_USERS_ALLOW_SIGN_UP=false"
            - "GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}"
            - "GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}"
            - "GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@lancekuo.com}"
            - "GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}"
            - "GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}"
            - "GF_SMTP_USER=${GF_SMTP_USER}"
            - "GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}"
            - "GF_AUTH_GITHUB_ENABLED=${GF_AUTH_GITHUB_ENABLED:-false}"
            - "GF_AUTH_GITHUB_CLIENT_ID=${GF_AUTH_GITHUB_CLIENT_ID}"
            - "GF_AUTH_GITHUB_CLIENT_SECRET=${GF_AUTH_GITHUB_CLIENT_SECRET}"
            - "GF_AUTH_GITHUB_TEAM_IDS=${GF_AUTH_GITHUB_TEAM_IDS}"
            - "GF_AUTH_GITHUB_SCOPES=user:email,read:org"
        volumes:
            - data-local:/var/lib/grafana
        ports:
            - "3000:3000"
        networks: 
            - monitor-network
        deploy:
            placement:
                constraints:
                    - node.labels.azs == 1
            resources:
                limits:
                    cpus: '0.50'
                    memory: 128M
                reservations:
                    cpus: '0.50'
                    memory: 32M
    prometheus:
        build: prometheus/
        image: "lancekuo/prometheus:2.4.2"
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention=4320h'
            - '--storage.tsdb.path=/prometheus'
        environment:
            - 'JOBS=managers.docker:9323 workers.docker:9323'
        healthcheck:
            test: nc -zw 1  localhost 9090
            interval: 30s
            timeout: 30s
            retries: 3
        volumes:
            - data-local:/prometheus
        ports:
            - "9090:9090"
        networks: 
            - monitor-network
        deploy:
            placement:
                constraints:
                    - node.labels.azs == 0
            resources:
                limits:
                    cpus: '0.50'
                    memory: 2048M
                reservations:
                    cpus: '0.50'
                    memory: 128M
    node-exporter:
        build: node-exporter/
        image: "lancekuo/node-exporter:0.16.0"
        healthcheck:
            test: nc -zw 1 localhost 9100
            interval: 15s
            timeout: 30s
            retries: 3
        command: 
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
            - '--collector.textfile.directory=/etc/node-exporter/'
        volumes:
            - /proc:/host/proc
            - /sys:/host/sys
            - /:/rootfs
            - /etc/hostname:/etc/host_hostname
        environment:
            - "HOST_HOSTNAME=/etc/host_hostname"
        networks: 
            - monitor-network
        deploy:
            mode: global
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 10s
            update_config:
                parallelism: 2
                delay: 10s
            resources:
                limits:
                    cpus: '0.10'
                    memory: 128M
                reservations:
                    cpus: '0.10'
                    memory: 64M

    cadvisor:
        image: "google/cadvisor:v0.31.0"
        healthcheck:
            test: nc -zw 1 localhost 8080
            interval: 15s
            timeout: 30s
            retries: 3
        command:
            - '-docker_only'
        volumes:
            - /var/lib/docker:/var/lib/docker
            - /var/run:/var/run
            - /sys:/sys
            - /:/rootfs
        networks: 
            - monitor-network
        deploy:
            mode: global
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 10s
            update_config:
                parallelism: 2
                delay: 10s
            resources:
                limits:
                    cpus: '0.10'
                    memory: 128M
                reservations:
                    cpus: '0.10'
                    memory: 64M
volumes:
    data-local:
        name: '{{.Service.Name}}-{{.Task.Slot}}'
        driver: local

networks:
  monitor-network:
    attachable: true
    name: monitoring
